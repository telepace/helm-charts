name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

#       - name: Fetch history
#         run: git fetch --prune --unshallow

#       - name: Configure Git
#         run: |
#           git config user.name "$GITHUB_ACTOR"
#           git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

#       - name: Set up Helm
#         uses: azure/setup-helm@v3
#         with:
#           version: v3.13.0

#       - name: Add dependency chart repos
#         run: |
#           helm repo add bitnami https://charts.bitnami.com/bitnami
#           helm repo add grafana https://grafana.github.io/helm-charts
#     #       helm repo add openim https://openimsdk.github.io/helm-charts

#       - name: Run chart-releaser
#         uses: helm/chart-releaser-action@v1.6.0
#         with:
#           charts_dir: charts
#           config: "./.github/configs/cr.yaml"
#           packages_with_index: true
#           skip_existing: true
#         env:
#           CR_TOKEN: "${{ secrets.BOT_GITHUB_TOKEN }}"
#           CR_GENERATE_RELEASE_NOTES: true

#       # see https://github.com/helm/chart-releaser/issues/183
#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Push charts to GHCR
#         run: |
#           shopt -s nullglob
#           for pkg in .cr-release-packages/*; do
#             if [ -z "${pkg:-}" ]; then
#               break
#             fi
#             helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts"
#           done